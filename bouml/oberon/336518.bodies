class Occupied_State
!!!350470.cpp!!!	create(inout stm : Price_Level) : void
  {
    stm._set_currentState(stm._price_level_state._occupied_state._stable_state);
#ifdef VERBOSE_STATE_MACHINE
    puts("DEBUG : current state is now .Price Level.Occupied.Stable");
#endif
    stm._price_level_state._occupied_state._stable_state.create(stm);
  }
!!!350598.cpp!!!	opened(inout stm : Price_Level) : void
  {
#ifdef VERBOSE_STATE_MACHINE
    puts("DEBUG : execute activity of transition <transition>");
#endif
stm.deferMessage();  }
!!!350726.cpp!!!	created(inout stm : Price_Level) : void
  {
#ifdef VERBOSE_STATE_MACHINE
    puts("DEBUG : execute activity of transition <transition>");
#endif
stm.deferMessage();  }
!!!350854.cpp!!!	augmented(inout stm : Price_Level) : void
  {
#ifdef VERBOSE_STATE_MACHINE
    puts("DEBUG : execute activity of transition <transition>");
#endif
stm.deferMessage();  }
!!!350982.cpp!!!	activated(inout stm : Price_Level) : void
  {
#ifdef VERBOSE_STATE_MACHINE
    puts("DEBUG : execute activity of transition <transition>");
#endif
stm.deferMessage();  }
!!!351110.cpp!!!	_upper(inout stm : Price_Level) : Price_Level::AnyState
  return &stm._price_level_state;
