class RStore
!!!590598.cpp!!!	transmit(in event : Event [0..1]) : void
using namespace oberon::core;
if (event) {
  if (event->orderId() != Event::kNaOrderId)
    if (event->orderId() != boost::uuids::nil_uuid())
      order_id_.push_back(to_string(event->orderId()));
    else
      order_id_.push_back("");
  else
    order_id_.push_back("NA");
  timestamp_.push_back(event->timestamp().time_since_epoch().count() /
                       1000000.0);
  local_timestamp_.push_back(event->localTimestamp().time_since_epoch().count() /
                       1000000.0);
  if (event->eventNo() != Event::kNaEventNo)
    event_no_.push_back(event->eventNo());
  else
    event_no_.push_back(NA_INTEGER);
  price_.push_back(event->price());
  volume_.push_back(event->volume());
  delta_volume_.push_back(event->deltaVolume());
  if (event->tradeId() != Event::kNaTradeId)
    trade_id_.push_back(event->tradeId());
  else
    trade_id_.push_back(NA_INTEGER);
  if (event->takerOrderId() != Event::kNaOrderId)
    if (event->takerOrderId() != boost::uuids::nil_uuid())
      taker_order_id_.push_back(to_string(event->takerOrderId()));
    else
      taker_order_id_.push_back("");
  else
    taker_order_id_.push_back("NA");
  state_.push_back(event->state());
}
!!!752390.cpp!!!	toDataframe() : DataFrame
return Rcpp::DataFrame::create(
    Rcpp::Named("maker_order_id") = order_id_, Rcpp::Named("event_no") = event_no_,
    Rcpp::Named("timestamp") = timestamp_, Rcpp::Named("state") = state_,
    Rcpp::Named("price") = price_, Rcpp::Named("volume") = volume_,
    Rcpp::Named("trade_id") = trade_id_,
    Rcpp::Named("delta_volume") = delta_volume_,
    Rcpp::Named("taker_order_id") = taker_order_id_,
    Rcpp::Named("local_timestamp") = local_timestamp_);

