// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// reconstructCoinbase
DataFrame reconstructCoinbase(DataFrame source, LogicalVector extract_only);
RcppExport SEXP _oberon_reconstructCoinbase(SEXP sourceSEXP, SEXP extract_onlySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type source(sourceSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type extract_only(extract_onlySEXP);
    rcpp_result_gen = Rcpp::wrap(reconstructCoinbase(source, extract_only));
    return rcpp_result_gen;
END_RCPP
}
// reconstructBitstamp
DataFrame reconstructBitstamp(DataFrame quotes, DataFrame trades, LogicalVector extract_only);
RcppExport SEXP _oberon_reconstructBitstamp(SEXP quotesSEXP, SEXP tradesSEXP, SEXP extract_onlySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type quotes(quotesSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type trades(tradesSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type extract_only(extract_onlySEXP);
    rcpp_result_gen = Rcpp::wrap(reconstructBitstamp(quotes, trades, extract_only));
    return rcpp_result_gen;
END_RCPP
}
// reconstructBitfinex
DataFrame reconstructBitfinex(DataFrame quotes, DataFrame trades, LogicalVector extract_only);
RcppExport SEXP _oberon_reconstructBitfinex(SEXP quotesSEXP, SEXP tradesSEXP, SEXP extract_onlySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type quotes(quotesSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type trades(tradesSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type extract_only(extract_onlySEXP);
    rcpp_result_gen = Rcpp::wrap(reconstructBitfinex(quotes, trades, extract_only));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_oberon_reconstructCoinbase", (DL_FUNC) &_oberon_reconstructCoinbase, 2},
    {"_oberon_reconstructBitstamp", (DL_FUNC) &_oberon_reconstructBitstamp, 3},
    {"_oberon_reconstructBitfinex", (DL_FUNC) &_oberon_reconstructBitfinex, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_oberon(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
